# BOttle Blog Engine -- bobe

## Why ?

Before this project, my blog was powered by [toto][].

One day, I decided to learn ruby in order to add categories and other few things.
I finally give up ruby and decided to reimplement a blog engine in a [bottle][]

Of course, the whole project (design included) is released under the WTFPL :


                DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE
                        Version 2, December 2004

     Copyright (C) 2004 Sam Hocevar <sam@hocevar.net>

     Everyone is permitted to copy and distribute verbatim or modified
     copies of this license document, and changing it is allowed as long
     as the name is changed.

                DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE
       TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION

      0. You just DO WHAT THE FUCK YOU WANT TO.



[toto]: http://cloudhead.io/toto
[bottle]: http://bottlepy.org

## How ?

This tiny blog engine is written in [python][].
As I said, it use the [bottle][] python micro web-framework.

The posts, breves and pages must be written using [Markdown][].

All the files must be formatted like this :

    title: A sample article
    author: matael
    date: 10/10/2010
    tags: [tag1, tag2]

    This is my slug

    ~

    And the end of the article.

The 4 first lines (until the first empty one `\n` specify metadata.
They are formated using [yaml][]. 

Between metadata and the `/~/` line, you can put a slug which will appear on frontpage.

Finally, you should put posts in a `posts` folder, breves in a `breves` folder and pages in a `pages` one.

As you've probably already understood, you'll need the following python librairies :

- [bottle][]
- [Markdown][] ([python-markdown][])
- [pyYaml][]

[python-markdown]: http://www.freewisdom.org/projects/python-markdown
[python]: http://python.org
[Markdown]: http://daringfireball.net/projects/markdown
[yaml]:http://www.yaml.org
[pyYaml]: http://pyyaml.org

## What ?

bobe is well-named : it's a tiny blog-engine written over [bottle][].

This application runs over a WSGI-enabled web-server and allows you to :

- write posts
- write breves (small posts)
- write pages

### Why breves and posts ?

Because sometimes it interresting to manage differently long and brieves posts, it's nice to separate them.

That you have to know is that breves and posts share the same management and the number of different types will soon be extended (hashtables are... __powerfull__).

### Comments

Comments are powered by disqus, you should modify the `DISQUS` variable in the `settings.py` file.

### Versionning

Of course, versionning is powered using git. You really should learn that if you're not already aware of this powerfull tool.


# Designing

Of course, you can customize this tool as you want.

## Settings

Settings are in 2 parts :

- The first part is contained in the `settings.py` file.
- The second is in `base.html`
